/*
This program uses the team roster for Tempa Bay Buccaneers of NFL to demonstrate following SQL commands:

CREATE, ALTER, ADD, DROP, INSERT, SELECT

DISTINCT, EXCEPT, INTERSECT, UNION, INNER JOIN, CROSS JOIN, GROUP BY, HAVING COUNT(), CASE, EXEC

INNER JOIN, LEFT and RIGHT OUTER JOIN FULL OUTER JOIN, User Defined Procedure

PRIMARY KEY

*/


USE Tempa;

CREATE TABLE Roster_1 (
    ID INT NOT NULL,
    FirstName VARCHAR(255) NOT NULL,
	LastName VARCHAR(255) NOT NULL,
    Age INT NOT NULL,
    PRIMARY KEY (ID)
);
GO

CREATE TABLE Roster_2 (
    ID INT NOT NULL,
    FirstName VARCHAR(255) NOT NULL,
	LastName VARCHAR(255) NOT NULL,
    Age INT NOT NULL
);
GO

INSERT INTO Roster_1(ID, FirstName, LastName, Age)
VALUES (100, 'Tom', 'Brady', 43),
(99, 'Andrew', 'Adams', 28),
(98, 'Cameron', 'Brate', 29),
(97, 'LeSean', 'McCoy', 32),
(96, 'Jason', 'Pierre-Paul', 31),
(101, 'Antonio', 'Brown', 32),
(102, 'Mike', 'Evans', 27),
(103, 'Rob', 'Gronkowski', 31);

INSERT INTO Roster_2(ID, FirstName, LastName, Age)
VALUES (100, 'Tom', 'Brady', 43),
(101, 'Antonio', 'Brown', 32),
(102, 'Mike', 'Evans', 27),
(103, 'Rob', 'Gronkowski', 31),
(104, 'Leonard', 'Fournette', 25),
(105, 'Chris', 'Godwin', 24),
(106, 'Ndamukong', 'Suh', 33);

SELECT * FROM Roster_1;
SELECT * FROM Roster_2;

SELECT FirstName, LastName, Age
FROM Roster_2
WHERE (LastName <> 'Brady')
ORDER BY FirstName, LastName DESC;

SELECT Roster_1.LastName, Roster_1.FirstName, Roster_2.ID, Roster_2.Age, Roster_1.ID * Roster_1.Age AS Expr1
FROM  Roster_1 INNER JOIN
Roster_2 ON Roster_1.ID = Roster_2.ID;

SELECT Roster_1.LastName, Roster_1.FirstName, Roster_2.ID, Roster_2.Age, Roster_1.ID * Roster_1.Age AS Expr1
FROM Roster_1 INNER JOIN
Roster_2 ON Roster_1.ID = Roster_2.ID
ORDER BY Expr1 DESC;

SELECT * FROM Roster_2 WHERE ID > 99
EXCEPT
SELECT * FROM Roster_1 WHERE ID < 106;

SELECT LastName, FirstName, Age FROM Roster_2 WHERE ID > 99
EXCEPT
SELECT LastName, FirstName, Age FROM Roster_1 WHERE ID < 106;

SELECT ID FROM Roster_2
INTERSECT
SELECT ID FROM Roster_1;

SELECT ID FROM Roster_2
EXCEPT
SELECT ID FROM Roster_1;

SELECT Roster_2.LastName, Roster_2.FirstName, Roster_1.Age, Roster_1.ID FROM Roster_2
INNER JOIN Roster_1
ON Roster_2.ID = Roster_1.ID;

SELECT Roster_2.LastName, Roster_2.FirstName, Roster_1.Age, Roster_1.ID FROM Roster_2
LEFT OUTER JOIN Roster_1
ON Roster_2.ID = Roster_1.ID;

SELECT Roster_2.LastName, Roster_2.FirstName, Roster_1.Age, Roster_1.ID FROM Roster_2
RIGHT OUTER JOIN Roster_1
ON Roster_2.ID = Roster_1.ID;

SELECT Roster_2.LastName, Roster_2.FirstName, Roster_1.Age, Roster_1.ID FROM Roster_2
FULL OUTER JOIN Roster_1
ON Roster_2.ID = Roster_1.ID;

SELECT * FROM Roster_2
INNER JOIN Roster_1 ON Roster_2.ID = Roster_1.ID;

SELECT * FROM Roster_2
RIGHT OUTER JOIN Roster_1 ON Roster_2.ID = Roster_1.ID;

SELECT * FROM Roster_2
LEFT OUTER JOIN Roster_1 ON Roster_2.ID = Roster_1.ID;

SELECT * FROM Roster_2
FULL OUTER JOIN Roster_1 ON Roster_2.ID = Roster_1.ID;

SELECT * FROM Roster_2
CROSS JOIN Roster_1;

SELECT Roster_2.ID FROM Roster_2
CROSS JOIN Roster_1;

SELECT Roster_2.ID FROM Roster_2, Roster_1;

SELECT COUNT(ID)
FROM Roster_2;

ALTER TABLE Roster_2
ADD PRIMARY KEY (ID);

ALTER TABLE Roster_2
ADD CONSTRAINT PK_Person PRIMARY KEY (ID);

ALTER TABLE Roster_2
DROP CONSTRAINT PK_Person;

ALTER TABLE Roster_1
ADD CONSTRAINT UC_Person UNIQUE (LastName);

/*
ALTER TABLE Roster_1
ADD UNIQUE (LastName);
*/

ALTER TABLE Roster_1
DROP CONSTRAINT UC_Person;

CREATE VIEW VIEWRoster_2 AS
SELECT ID, Age FROM Roster_2;

SELECT * FROM VIEWRoster_2;

CREATE VIEW Roster_101 AS
SELECT ID, Age FROM Roster_2
WHERE ID > 101;

SELECT * FROM Roster_101;

DROP VIEW Roster_101;

SELECT * FROM Roster_1;
SELECT * FROM Roster_2;

SELECT LastName, FirstName FROM Roster_2 WHERE ID > 100;
SELECT LastName, FirstName FROM Roster_2 WHERE ID = 101;

SELECT DISTINCT LastName FROM Roster_2;
SELECT * FROM Roster_2 ORDER BY ID ASC;
SELECT * FROM Roster_2 ORDER BY ID DESC;

SELECT * FROM Roster_2 WHERE ID > 100 AND ID < 104;
SELECT * FROM Roster_2 WHERE ID BETWEEN 100 AND 104;
SELECT LastName,FirstName, Age FROM Roster_2 WHERE NOT ID = 101;
SELECT LastName,FirstName, Age FROM Roster_2 WHERE ID <> 101;

SELECT * FROM Roster_2;
SELECT * FROM Roster_1;

SELECT LastName, FirstName FROM Roster_2
WHERE ID = 101
UNION
SELECT LastName, FirstName FROM Roster_1
WHERE ID = 104;

SELECT * FROM Roster_2
WHERE ID = 101
UNION
SELECT * FROM Roster_1
WHERE ID = 104;

SELECT * FROM Roster_2
WHERE ID BETWEEN 102 AND 103
INTERSECT
SELECT * FROM Roster_1
WHERE ID < 104;

SELECT * FROM Roster_2
WHERE ID > 100
INTERSECT
SELECT * FROM Roster_1
WHERE ID < 104;

SELECT ID, Age, FirstName FROM Roster_2
WHERE ID > 100
INTERSECT
SELECT ID, Age, FirstName FROM Roster_1
WHERE ID < 104;

SELECT ID FROM Roster_2
INTERSECT
SELECT ID FROM Roster_1;

SELECT Age FROM Roster_2
INTERSECT
SELECT Age FROM Roster_1;

SELECT ID, Age
FROM Roster_2
INTERSECT
SELECT ID, Age
FROM Roster_1;

SELECT Age FROM Roster_2
EXCEPT
SELECT Age FROM Roster_1;

SELECT ID FROM Roster_2
EXCEPT
SELECT ID FROM Roster_1;

SELECT * FROM Roster_2 WHERE ID > 99
INTERSECT
SELECT * FROM Roster_1 WHERE ID < 106;

SELECT * FROM Roster_2 WHERE ID > 99
EXCEPT
SELECT * FROM Roster_1 WHERE ID < 106;

SELECT ID FROM Roster_2
INTERSECT
SELECT ID FROM Roster_1;

/*

SELECT ID FROM Roster_2
EXCEPT
SELECT ID FROM Roster_1;

SELECT * FROM Roster_2
SELECT * FROM Roster_1

SELECT Roster_2.FirstName, Roster_2.LastName, Roster_1.ID, Roster_1.Age
FROM Roster_2 INNER JOIN Roster_1
ON Roster_2.ID = Roster_1.ID;

CREATE VIEW VIEW_2 AS
SELECT Roster_2.FirstName, Roster_2.LastName, Roster_1.ID, Roster_1.Age
FROM Roster_2 INNER JOIN Roster_1
ON Roster_2.ID = Roster_1.ID;

SELECT * FROM VIEW_2;

SELECT * FROM Roster_2 CROSS JOIN Roster_1;

INSERT INTO Roster_2 (ID, FirstName, LastName, Age) VALUES (99, 'Yang', 'Mi', 33);
DELETE FROM Roster_2 WHERE ID = 99;

INSERT INTO Roster_2 (ID, LastName, FirstName, Age) VALUES (99, 'Yang', 'Mi', 33), (98, 'Yao', 'Bi', 33);
INSERT INTO Roster_2 (ID, LastName) VALUES (97,'Name');
DELETE FROM Roster_2 WHERE ID = 97;

UPDATE Roster_2
SET LastName = 'Fu', Age = 32
WHERE ID = 98;

UPDATE Roster_2
SET Age = 33
WHERE ID = 98;

SELECT * FROM Roster_2;
SELECT * FROM VIEW_1;

SELECT * FROM VIEWRoster_2;
SELECT * FROM VIEWRoster_21;

DELETE FROM VIEWRoster_2
WHERE ID = 98;

DELETE FROM VIEWRoster_2
WHERE ID < 101;

INSERT INTO Roster_2 VALUES (96, 'Bi', 'Yao', 32);

SELECT * FROM Roster_2;


SELECT * FROM Roster_2
CROSS JOIN Roster_1;

SELECT Roster_2.ID FROM Roster_2
CROSS JOIN Roster_1;

SELECT Roster_2.ID FROM Roster_2, Roster_1;

/* RESTORE DATABASE Example */
RESTORE DATABASE Practice FROM DISK = 'C:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS\MSSQL\Backup\practice.bak'

SELECT * FROM Roster_1;
SELECT * FROM Planets;
SELECT * FROM Planets1;
SELECT * FROM Roster_2;

/* COUNT HAVING */
SELECT COUNT(ID), Age
FROM Roster_2
GROUP BY Age
HAVING COUNT(ID) > 1;

/* the following doesn't work */
SELECT COUNT(ID)
FROM Roster_2
HAVING COUNT(ID) > 1;

SELECT COUNT(ID)
FROM Roster_2
HAVING COUNT(ID) > 2;

SELECT COUNT (*) FROM Roster_2;

/* CASE (CASE...WHEN...THEN...ELSE...END) */

SELECT ID, Age,
CASE 
	WHEN ID > 101 THEN 'ID > 101'
	WHEN ID = 101 THEN 'ID = 101'
	ELSE 'ID < 101'
END AS QuantityText
FROM Roster_2;

SELECT ID, Age,
CASE 
	WHEN ID > 102 THEN 'ID > 102'
	WHEN ID <= 102 AND ID > 99 THEN 'ID <= 102 AND ID > 99'
	ELSE 'ID <= 99'
END AS PrintText
FROM Roster_2;

SELECT * FROM Roster_1;

/* SET NOCOUNT ON */
SET NOCOUNT ON;
INSERT INTO Roster_1 VALUES (102, 'Tang', 'Cristina', 42);
INSERT INTO Roster_1 VALUES (101, 'Hsu', 'Gab', 32);

SET NOCOUNT OFF;
INSERT INTO Roster_1 VALUES (100, 'Ho', 'Rene', 32);
INSERT INTO Roster_1 VALUES (99, 'Ho', 'Alvin', 35);

SELECT * FROM Roster_2;

/* Stored Procedure */
CREATE PROCEDURE ShowRoster_2
AS
SELECT * FROM Roster_2;

EXEC ShowRoster_2;
EXECUTE ShowRoster_2;

CREATE PROCEDURE SELECTID @ShowAge INT
AS
SELECT * FROM Roster_2 WHERE Age = @ShowAge;

EXEC SELECTID @ShowAge = 32;

DROP PROCEDURE SELECTID;

SELECT * FROM Roster_2;

SELECT COUNT (*) FROM Roster_2;

SELECT ID, Age
FROM Roster_2
INTERSECT
SELECT ID, Age
FROM Roster_1;

SELECT * FROM Roster_2
INTERSECT
SELECT * FROM Roster_1;

SELECT * FROM Roster_1
UNION
SELECT * FROM Roster_2;

SELECT ID, Age FROM Roster_1
UNION
SELECT ID, Age FROM Roster_2;

SELECT DISTINCT ID FROM Roster_2;

SELECT ID FROM Roster_2
EXCEPT
SELECT ID FROM Roster_1;

SELECT ID FROM Roster_2
EXCEPT
SELECT ID FROM Roster_1;

SELECT * FROM Roster_2
EXCEPT
SELECT * FROM Roster_1;

SELECT ID FROM Roster_2
INTERSECT
SELECT ID FROM Roster_1;

SELECT * FROM Roster_2
INTERSECT
SELECT * FROM Roster_1;

INSERT INTO Roster_2 VALUES (105, 'Margret', 'Cheng', 32);

UPDATE Roster_2 SET Age = 38 WHERE ID = 105;

-- the end

*/
